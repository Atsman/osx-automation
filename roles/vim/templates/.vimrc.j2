set nocompatible

" >> Vundle setup start
call plug#begin('{{ plug_path }}')
" General
Plug 'editorconfig/editorconfig-vim'
Plug 'dracula/vim'

" File explorer and tabs
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

" Git
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" Syntax / Linter
Plug 'w0rp/ale'

" Status bar
Plug 'bling/vim-airline'

" Navigation
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'

" Autocomplete
Plug 'Shougo/deoplete.nvim'

" Quoting/Parenthesizing
Plug 'tpope/vim-surround'

" Golang
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'zchee/deoplete-go', { 'for': 'go' }

" JavaScript
Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
Plug 'styled-components/vim-styled-components', { 'branch': 'main', 'for': 'javascript' }
Plug 'posva/vim-vue', { 'for': 'javascript' }
Plug 'wokalski/autocomplete-flow', { 'for': 'javascript' }
Plug 'Shougo/neosnippet', { 'for': 'javascript' }
Plug 'Shougo/neosnippet-snippets', { 'for': 'javascript' }

" Clojure
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
Plug 'venantius/vim-cljfmt', { 'for': 'clojure' }
Plug 'vim-scripts/paredit.vim', { 'for': 'clojure' }
Plug 'clojure-vim/async-clj-omni', { 'for': 'clojure' }

" Python
Plug 'nvie/vim-flake8', { 'for': 'python' }
Plug 'zchee/deoplete-jedi', { 'for': 'python' }

" Scala
Plug 'derekwyatt/vim-scala', { 'for': 'scala' }
Plug 'ensime/ensime-vim', { 'for': 'scala' }
call plug#end()

filetype indent plugin on
filetype plugin on

syntax on

set langmenu=en_US
set hidden
set showcmd
set hlsearch
set autoindent
set nostartofline
set ruler
set laststatus=2
set confirm
set number
set shiftwidth=2
set softtabstop=2
set expandtab
set shiftwidth=2
set smarttab

set mouse=nv

set clipboard=unnamed

" Enable project specific .nvimrc files
set exrc
set secure

set runtimepath^=~/.config/nvim/bundle/ctrlp.vim
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

set completeopt=menu,preview
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
  let g:ackprg = 'ag --vimgrep'
endif

set splitbelow
set splitright

" Dracula theme settings
let g:dracula_colorterm=0
colorscheme dracula
color dracula

let NERDTreeShowHidden=1

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:deoplete#enable_at_startup = 1
let g:deoplete#keyword_patterns = {}

" Vim gitgutter
set updatetime=500
set rtp+=/usr/local/opt/fzf

let g:python_host_prog = "{{ python_venv_path | expanduser }}/bin/python"
let g:python3_host_prog = "{{ python3_venv_path | expanduser }}/bin/python"
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

let g:ale_fix_on_save = 1
let g:ale_lint_delay = 500

" Mappings
vnoremap <leader>p "_dP
nnoremap <space> za
