#---------------------------------------------
# Command history configuration
#---------------------------------------------
#
HISTSIZE=50000
SAVEHIST=50000
HISTFILE=~/.zsh_history

CASE_SENSITIVE=false
HYPHEN_INSENSITIVE=false
DISABLE_AUTO_UPDATE=false
DISABLE_LS_COLORS=false
DISABLE_AUTO_TITLE=false
ENABLE_CORRECTION=false
COMPLETION_WAITING_DOTS=true

#---------------------------------------------
# Exports
#---------------------------------------------
export GPG_TTY=$(tty)
export LANG=en_US.UTF-8

export NODE_MODULES_BIN=./node_modules/.bin
export GOPATH={{ GOPATH }}
export GCPATH={{ GCP_PATH }}
export JAVA_HOME={{ JAVA_HOME }}
export CARGO_HOME=~/.cargo
export ZPLUG_HOME={{ ZPLUG_HOME }}
export PATH=$HOME/bin:/usr/local/bin:$PATH:"$(yarn global bin)":$JAVA_HOME/bin:$GCPATH/bin:$GOPATH/bin:$NODE_MODULES_BIN:$CARGO_HOME/bin

{% for k, v in ENVS.items() %}
export {{ k }}="{{ v }}"
{% endfor %}

if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR="vim"
else
  export EDITOR="nvim"
fi

export SSH_KEY_PATH=~/.ssh/rsa_id

export FZF_BASE={{ FZF_BASE }}
export FZF_DEFAULT_COMMAND="rg --files --hidden"

#---------------------------------------------
# Plugins 
#---------------------------------------------
export NVM_LAZY_LOAD=true
source $ZPLUG_HOME/init.zsh

zplug "dracula/zsh", as:theme
zplug "plugins/vi-mode", from:oh-my-zsh
zplug "plugins/fzf", from:oh-my-zsh

zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"

zplug "lukechilds/zsh-nvm"

if ! zplug check; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

#---------------------------------------------
# Aliases
#---------------------------------------------

# Basic commands
alias ag="ag --path-to-ignore ~/.ignore"
alias mkdir="mkdir -p"
alias e="$EDITOR"
alias ls="exa"
alias c="clear"
alias n="cd ~/Projects/atsman/notes; e"
alias vimdiff="nvim -d"

# Docker
alias docker_clean="docker system prune --all --volumes"

# Git
function g() {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}
compdef g=git

alias ga="git add"
alias gaa="git add --all"

alias gb="git branch"

alias gc="git commit -v"
alias gca="git commit -v --amend"
alias gcm="git commit -v -m"

alias gc!="git commit --no-verify -v"
alias gca!="git commit --amend --no-verify -v"
alias gcm!="git commit --no-verify -v -m"

function gcb() {
  if [[ $# > 0 ]]; then
    git checkout $@
  else
    fgcb
  fi
}
alias gcbb="git checkout -b"

alias gcp="git cherry-pick"

alias gpr="git pull -r"
alias gl="git log"

alias gp="git push -u origin HEAD"
alias gp!="gp --no-verify"
alias gpf="gp --force-with-lease"
alias gpf!="gp! --force-with-lease"
alias gca="git commit --amend --no-verify"

alias gd="git diff"
alias gds="git diff --staged"

alias gf="git fetch"
alias gfo="git fetch origin"

alias gra="git reset ."

alias gmt="git mergetool"

alias gr="git rebase"
alias grc="git rebase --continue"
alias gra="git rebase --abort"

fe() {
  local files
  IFS=$"\n" files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

# fcb - fuzzy git checkout branch (including remote branches)
fgcb() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

flpass() {
  lpass login {{ EMAIL }}
  lpass show -c --password $(lpass ls  | fzf | awk "{print $(NF)}" | sed "s/\]//g")
}

fkill() {
  local pid 
  if [ "$UID" != "0" ]; then
      pid=$(ps -f -u $UID | sed 1d | fzf -m | awk "{print $2}")
  else
      pid=$(ps -ef | sed 1d | fzf -m | awk "{print $2}")
  fi  

  if [ "x$pid" != "x" ]
  then
      echo $pid | xargs kill -${1:-9}
  fi  
}

tm() {
  tmux attach || tmux new
}

alias tmks="tmux kill-server"

#---------------------------------------------
# Bindings
#---------------------------------------------
bindkey '^ ' fzf-history-widget

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
